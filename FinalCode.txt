x1 = [80,5,2,50]
x2 = [3,1,0,2]
x3 = [0,2,3,0]

theta = [.02,.04,.03,.05]


alfa = .01

x = [1,25,2,0]

y  = [1,1,1,1]
y1 = [1,0,0,1]
y2 = [0,1,0,0]
y3 = [0,0,1,0]


class1Theta = zeros(1,length(x1))
class2Theta = zeros(1,length(x1))
class3Theta = zeros(1,length(x1))


// this value is for the theta value
classZero = [y;x1;x2;x3]


// main hypo value
hypo = zeros(1,4);
i = 1
while i<=length(x1)
hypo(i) = 1/(1+e.^(-sum(classZero(:,i).*theta')))	
i++
end

// class one
cost1 = (1./(2.*length(x1))).*sum((hypo-y1).^2)
i = 1
while i<=length(x1)
class1Theta(i) = theta(i) - alfa.*(1/length(x1))*sum((y1 - hypo)*(classZero(i,:))')
i++
end

// class two
cost2 = (1./(2.*length(x1))).*sum((hypo-y2).^2)
i = 1
while i<=length(x1)
class2Theta(i) = theta(i) - alfa.*(1/length(x1))*sum((y2 - hypo)*(classZero(i,:))')
i++
end

// class three
cost3 = (1./(2.*length(x1))).*sum((hypo-y3).^2)
i = 1
while i<=length(x1)
class3Theta(i) = theta(i) - alfa.*(1/length(x1))*sum((y3 - hypo)*(classZero(i,:))')
i++
end

For class one
hypoValue(1) = class1Theta*x'
hypoValue(2) = class2Theta*x'
hypoValue(3) = class3Theta*x'

max(hypoValue)



///=======================================optimize the code 

x1 = [80,5,2,50]
x2 = [3,1,0,2]
x3 = [0,2,3,0]

theta = [.02,.04,.03,.05]


alfa = .01

x = [1,25,2,0]

y  = [1,1,1,1]
y1 = [1,0,0,1]
y2 = [0,1,0,0]
y3 = [0,0,1,0]
yy = [y1;y2;y3]

cost = zeros(1,3)
classTheta = zeros(3,4)


classZero = [y;x1;x2;x3]



hypo = zeros(1,4);
i = 1
while i<=length(x1)
hypo(i) = 1/(1+e.^(-sum(classZero(:,i).*theta')))	
i++
end


i = 1
while i<=3
tempY = yy(i,:)
cost(i) = (1./(2.*length(x1))).*sum((hypo-tempY).^2)
j = 1
while j<=length(x1)
classTheta(i,j) = theta(j) - alfa.*(1/length(x1))*sum((hypo - tempY)*(classZero(j,:))')
j++
end
i++
end


hypoValue = zeros(1,3)
i = 1
while i<=3
hypoValue(i) = classTheta(i,:)*x'
i++ 
end


i = 1
answer = -999
while i<=3
if(answer<hypoValue(i)) 
answer = hypoValue(i)
end
i++
end

=====================================
x1 = [80,5,2,50,4]
x2 = [3,1,0,2,3]
x3 = [0,2,3,0,5]
x4 = [2,3,4,5,3]

theta = [.02,.04,.03,.05,.02]

alfa = .01

// predict the class is x
x = [1,25,2,0,24]

y  = [1,1,1,1,1]
numberOfclass = 4
y1 = [1,0,0,1,0]
y2 = [0,1,0,0,0]
y3 = [0,0,1,0,0]
y4 = [0,0,0,0,1]

yy = [y1;y2;y3;y4]

// cost function value in the this array
cost = zeros(1,numberOfclass )

classTheta = zeros(numberOfclass ,length(theta))
classZero = [y;x1;x2;x3;x4]


// hypo value
hypo = zeros(1,length(x1));
i = 1
while i<=length(x1)
hypo(i) = 1/(1+e.^(-sum(classZero(:,i).*theta')))	
i++
end


// cost calculate and the class of the Theta calculate
i = 1
while i<=numberOfclass 
tempY = yy(i,:)
// cost value
cost(i) = (1./(2.*length(x1))).*sum((hypo-tempY).^2)
j = 1
while j<=length(x1)
classTheta(i,j) = theta(j) - alfa.*(1/length(x1))*sum((hypo - tempY)*(classZero(j,:))')
j++
end
i++
end

// each value of the classTheta multiply by the x'
hypoValue = zeros(1,numberOfclass )
i = 1
while i<=numberOfclass 
hypoValue(i) = classTheta(i,:)*x'
i++ 
end


i = 1
classNumber = 0
answer = -999999
while i<=numberOfclass 
if(answer<hypoValue(i)) 
answer = hypoValue(i)
classNumber = i
end
i++
end

// two answers are given below
answer
classNumber








